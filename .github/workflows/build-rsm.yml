name: Build rsm

on:
  push:
    branches: ["main"]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-linux-musl
          # - i386-linux-musl
          # - aarch64-linux-musl
          # - riscv64-linux-musl
          # #- x86_64-windows-gnu

    name: ${{ matrix.target }}

    env:
      prerelease: false

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Check for changes
        run: |
          git diff --name-only ${{ github.sha }}^ ${{ github.sha }}

      - name: Install host utils
        run: sudo apt-get install -y ninja-build

      - name: Fetch zig
        run: |
          curl -L https://ziglang.org/download/0.9.1/zig-linux-x86_64-0.9.1.tar.xz | tar -xJ

      - name: Build rsm-${{ matrix.target }}
        run: |
          CFLAGS_HOST="-target ${{ matrix.target }}" \
          LDFLAGS_HOST="-target ${{ matrix.target }}" \
          CC="$PWD/zig-linux-x86_64-0.9.1/zig cc" \
          bash build.sh -static -out=out-${{ matrix.target }} "$@"

      - name: Archive rsm-${{ matrix.target }}.tar.gz
        run: |
          mkdir ${{ matrix.target }} &&
          mv out-${{ matrix.target }}/rsm ${{ matrix.target }}/ &&
          tar -czvf rsm-${{ matrix.target }}.tar.gz ${{ matrix.target }}

      - name: Define version
        run: echo "rsm_version=$(date '+%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Publish release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1.8.10
        with:
          prerelease: false
          artifacts: "rsm-${{ matrix.target }}.tar.gz"
          replacesArtifacts: true
          tag: "v${{ env.rsm_version }}"
          name: "rsm ${{ env.rsm_version }} "
          body: "rsm ${{ env.rsm_version }} built from ${{ github.sha }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
